name: Build and run tests

on:
  workflow_dispatch:
    inputs:
      openblas_repository:
        description: "OpenBLAS repository"
        required: true
        default: "OpenMathLib/OpenBLAS"
        type: string
      openblas_branch:
        description: "OpenBLAS branch"
        required: true
        default: "release-0.3.0"
        type: string
      blass_type:
        description: "Choose BLAS type"
        required: true
        default: 'apl'
        type: choice
        options:
          - apl
          - openblas_msvc
          - openblas_clang
      build_pytorch:
        description: "Build PyTorch"
        required: false
        default: true
        type: boolean
      run_tests:
        description: "Run tests"
        required: false
        default: false
        type: boolean
      run_tests_suite:
        description: "Test suite to run"
        required: false
        default: ""
        type: string
      run_tests_filter:
        description: "Test filter to run"
        required: false
        default: ""
        type: string
      run_tests_runs:
        description: "Test runs to execute"
        required: true
        default: 1
        type: number

env:
  JOB_DIR: ${{ github.workspace }}\pytorch-job
  DOWNLOADS_DIR: ${{ github.workspace }}\pytorch-job\downloads
  DEPENDENCIES_DIR: ${{ github.workspace }}\pytorch-job\dependencies
  SCRIPTS_DIR: ${{ github.workspace }}\pytorch-job\workflow\.github\scripts
  PYTORCH_SOURCES_DIR:  ${{ github.workspace }}\pytorch-job\pytorch
  ENABLE_APL: ${{ inputs.blass_type == 'apl' && '1' || '0' }}
  ENABLE_OPENBLAS: ${{ (inputs.blass_type == 'openblas_msvc' || inputs.blass_type == 'openblas_clang') && '1' || '0' }}
  WHEEL_DIR: ${{ github.workspace }}\pytorch-job\pytorch\dist
  WHEEL_NAME: torch-2.4.0a-cp311-cp311-win_arm64.whl

jobs:

  build_and_test:
    name: Build and run tests
    runs-on: [self-hosted, Windows, ARM64, PYTORCH]
    timeout-minutes: 800
    steps:
      - name: Get Release Version
        run: echo "RELEASE_VERSION=v0.0.$(Get-Date -Format 'yyMMddHHmm')" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
      - name: Git checkout workflow
        uses: actions/checkout@v3
        with:
          path: ${{ env.JOB_DIR }}/workflow
      - name: Git checkout PyTorch
        uses: actions/checkout@v3
        with:
          repository: "iremyux/pytorch"
          ref: "apl-tests"
          path: ${{ env.PYTORCH_SOURCES_DIR }}
          submodules: recursive
      - name: Clean PyTorch
        if: ${{ inputs.build_pytorch }}
        run: |
          & ${{ env.SCRIPTS_DIR }}\bootstrap_pytorch.bat
      - name: Build PyTorch
        if: ${{ inputs.build_pytorch }}
        run: |
          & ${{ env.SCRIPTS_DIR }}\build_pytorch.bat
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_VERSION }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          body: 'PyTorch release wheel for Windows on ARM64 (cpu-only) (RelWithDebInfo)'
          draft: false
          prerelease: false
      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.WHEEL_DIR }}\${{ env.WHEEL_NAME }}
          asset_name: ${{ env.WHEEL_NAME }}
          asset_content_type: application/zip
      # TEMPORARILY DISABLED
      # - name: Archive PyTorch
      #   if: ${{ inputs.build_pytorch }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: pytorch
      #     path: ${{ env.WHEEL_DIR }}/*
      #     retention-days: 3
      # - name: Git checkout OpenBLAS
      #   if: ${{ env.ENABLE_OPENBLAS }}
      #   uses: actions/checkout@v3
      #   with:
      #     repository: ${{ inputs.openblas_repository }}
      #     ref: ${{ inputs.openblas_branch }}
      #     path: ${{ env.JOB_DIR }}/openblas
      #     submodules: recursive
      # - name: Bootstrap sccache binaries
      #   run: |
      #     & ${{ env.SCRIPTS_DIR }}\bootstrap_sccache.bat
      # - name: Bootstrap APL binaries
      #   if: ${{ env.ENABLE_APL }}
      #   run: |
      #     & ${{ env.SCRIPTS_DIR }}\bootstrap_apl.bat
      # - name: Bootstrap OpenBLAS build
      #   if: ${{ env.ENABLE_OPENBLAS }}
      #   run: |
      #     & ${{ env.SCRIPTS_DIR }}\bootstrap_openblas.bat
      # - name: Build OpenBLAS with MSVC
      #   if: ${{ inputs.blass_type == 'openblas_msvc'}}
      #   run: |
      #     & ${{ env.SCRIPTS_DIR }}\build_openblas_msvc.bat
      # - name: Build OpenBLAS with Clang
      #   if: ${{ inputs.blass_type == 'openblas_clang'}}
      #   run: |
      #     & ${{ env.SCRIPTS_DIR }}\build_openblas_clang.bat
      # - name: Bootstrap PyTorch tests
      #   if: ${{ inputs.run_tests }}
      #   run: |
      #     & ${{ env.SCRIPTS_DIR }}\bootstrap_tests.bat
      # - name: Archive OpenBLAS
      #   if: ${{ env.ENABLE_OPENBLAS }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: openblas
      #     path: ${{ env.JOB_DIR }}/openblas/install/*
      #     retention-days: 3
      # - name: Run tests
      #   if: ${{ inputs.run_tests }}
      #   run: |
      #     & ${{ env.SCRIPTS_DIR }}\test.bat ${{ inputs.run_tests_runs}} ${{ inputs.run_tests_suite }} ${{ inputs.run_tests_filter }}
      # - name: Archive test results
      #   if: ${{ always() && inputs.run_tests }}
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: test-reports
      #     path: ${{ env.JOB_DIR }}/pytorch/test/test-reports/*
      #     retention-days: 7
